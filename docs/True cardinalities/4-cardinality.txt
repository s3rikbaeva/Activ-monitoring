SELECT COUNT(*)
FROM employee e, employee_record er,task t 
WHERE e.employeeID = er.employeeID AND er.employeeRecordID = t.employeeRecordID;

--Possible execution plans--
--(employee ✶ employee_record) ✶ task
SELECT COUNT(*) 
FROM task t JOIN (employee e JOIN employee_record er ON e.employeeID = er.employeeID)
            ON er.employeeRecordID = t.employeeRecordID;

--(employee_record ✶ task) ✶ employee
SELECT COUNT(*) 
FROM employee e JOIN (employee_record er JOIN task t ON er.employeeRecordID = t.employeeRecordID)
            ON e.employeeID = er.employeeID;

--(employee ✶ task) ✶ employee_record
SELECT COUNT(*) 
FROM employee_record er JOIN (employee e JOIN task)
            ON e.employeeID = er.employeeID AND er.employeeRecordID = t.employeeRecordID;

--Join cardinalities--
(employee ✶ employee_record) ✶ task (5613 + 5612) = 11225 tuples
--TIME FOR testQuery: 0.0020008087158203125 seconds
(employee_record ✶ task) ✶ employee (5613 + 5612) = 11225 tuples
--TIME FOR testQuery: 0.002002239227294922 seconds
(employee ✶ task) ✶ employee_record (31505769 + 5612) = 31511381 tuples
--TIME FOR testQuery: 0.0020017623901367188 seconds

--in this queries we used more datas, so accordingly, it would take us more time, but not more than a second

--Analyze 
--We decided that query 2 is the fastest and most efficient, although for passing tuples 1 and 2 of the same calculation time, query 2 wins.